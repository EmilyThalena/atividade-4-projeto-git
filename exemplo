 **Exemplo:**
 Para organizar o projeto de forma eficiente, utilizamos a **interface do usuário (frontend)** e a **lógica do backend**.como isso pode ser feito:

### 1. **Branch para Interface do Usuário (Frontend)**
   - **Nome da branch:** `feature/frontend-interface`
   - **Objetivo:** Desenvolver a interface do usuário (telas, formulários, layout).
   - **Atividades:**
     - Criar a estrutura HTML e o layout com CSS.
     - Implementar a interação com o usuário.
     - Garantir que a interface seja responsiva e usável.
   
### 2. **Branch para Lógica do Backend**
   - **Nome da branch:** `feature/backend-logica`
   - **Objetivo:** Implementar a lógica de armazenamento e cálculos (backend).
   - **Atividades:**
     - Criar a estrutura para armazenar dados (usando o banco de dados).
     - Implementar a lógica para cálculos de calorias e macronutrientes.
     - Garantir que os dados sejam processados e armazenados corretamente.

### Fluxo de Trabalho:
1. Criar a branch `feature/frontend-interface` e trabalhar nas funcionalidades de UI.
2. Criar a branch `feature/backend-logica` e trabalhar na lógica de backend.
3. Quando as funcionalidades estiverem completas, realizar **pull requests** para a branch principal (`main`).
4. Testar a integração entre frontend e backend para garantir que tudo funcione corretamente. 